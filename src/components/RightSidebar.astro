---
import { getCollection } from 'astro:content';
import TagBadge from './articles/TagBadge.astro';

// 記事を取得
const allArticles = (await getCollection('articles'))
  .filter(article => !article.data.draft)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

// 最新記事（最大5件）
const recentArticles = allArticles.slice(0, 5);

// 記事のタグ一覧と件数を取得
const tagCounts = new Map<string, number>();
allArticles.forEach(article => {
  article.data.tags.forEach(tag => {
    tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);
  });
});

// タグを件数でソート
const sortedTags = Array.from(tagCounts.entries())
  .sort((a, b) => b[1] - a[1])
  .slice(0, 10); // 最大10個のタグを表示
---

<aside class="hidden lg:flex lg:w-64 xl:w-72 shrink-0 border-l border-gray-200/60 dark:border-white/10" aria-label="右サイドメニュー">
  <div class="w-full py-6 px-4 space-y-8">

    <!-- 記事を検索 -->
    <section>
      <h2 class="text-sm font-semibold text-gray-900 dark:text-gray-100 mb-3">記事を検索</h2>
      <form method="GET" action="/articles" class="space-y-3">
        <div>
          <label for="search" class="sr-only">キーワード検索</label>
          <input
            type="search"
            id="search"
            name="search"
            placeholder="キーワードを入力..."
            value={Astro.url.searchParams.get('search') || ''}
            class="w-full px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
          />
        </div>
        <button
          type="submit"
          class="w-full px-3 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-900 transition-colors"
        >
          検索
        </button>
      </form>
    </section>

    <!-- 最新の記事一覧 -->
    {recentArticles.length > 0 && (
      <section>
        <h2 class="text-sm font-semibold text-gray-900 dark:text-gray-100 mb-3">最新の記事</h2>
        <ul class="space-y-3">
          {recentArticles.map(article => {
            const formattedDate = new Intl.DateTimeFormat('ja-JP', {
              month: 'short',
              day: 'numeric'
            }).format(article.data.date);

            return (
              <li>
                <article class="group">
                  <h3 class="text-sm font-medium leading-5">
                    <a
                      href={`/articles/${article.slug}`}
                      class="text-gray-900 dark:text-gray-100 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors"
                    >
                      {article.data.title}
                    </a>
                  </h3>
                  <time
                    datetime={article.data.date.toISOString()}
                    class="text-xs text-gray-500 dark:text-gray-400 mt-1 block"
                  >
                    {formattedDate}
                  </time>
                </article>
              </li>
            );
          })}
        </ul>

        {allArticles.length > recentArticles.length && (
          <div class="mt-4">
            <a
              href="/articles"
              class="text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors"
            >
              すべての記事を見る →
            </a>
          </div>
        )}
      </section>
    )}

            <!-- 記事のタグ一覧 -->
    {sortedTags.length > 0 && (
      <section>
        <h2 class="text-sm font-semibold text-gray-900 dark:text-gray-100 mb-3">記事のタグ</h2>
        <div class="flex flex-wrap gap-2">
          {sortedTags.map(([tag, count]) => (
            <TagBadge
              tag={tag}
              count={count}
              href={`/articles?tag=${encodeURIComponent(tag)}`}
            />
          ))}
        </div>

        {tagCounts.size > sortedTags.length && (
          <div class="mt-3">
            <a
              href="/articles"
              class="text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors"
            >
              すべてのタグを見る →
            </a>
          </div>
        )}
      </section>
    )}
  </div>
</aside>
