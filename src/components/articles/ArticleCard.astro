---
import TagBadge from './TagBadge.astro';
import type { CollectionEntry } from 'astro:content';

interface Props {
  article: CollectionEntry<'articles'>;
}

const { article } = Astro.props;
const { title, date, tags, description } = article.data;

// 記事の最初の段落を取得（サマリーとして使用）
const { Content } = await article.render();
const summary = description || '';

const formattedDate = new Intl.DateTimeFormat('ja-JP', {
  year: 'numeric',
  month: '2-digit',
  day: '2-digit'
}).format(date);
---

<article class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200/70 dark:border-white/10 p-6 hover:border-gray-300 dark:hover:border-white/20 hover:shadow-sm transition-all">
  <header class="mb-3">
    <h2 class="text-xl font-semibold mb-2">
      <a 
        href={`/articles/${article.slug}`}
        class="text-gray-900 dark:text-gray-100 hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
      >
        {title}
      </a>
    </h2>
    <div class="flex items-center gap-3 text-sm text-gray-500 dark:text-gray-400">
      <time datetime={date.toISOString()}>{formattedDate}</time>
      <div class="flex flex-wrap gap-1">
        {tags.map(tag => (
          <TagBadge tag={tag} href={`/articles?tag=${encodeURIComponent(tag)}`} />
        ))}
      </div>
    </div>
  </header>
  
  {summary && (
    <p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">
      {summary}
    </p>
  )}
  
  <footer>
    <a 
      href={`/articles/${article.slug}`}
      class="inline-flex items-center text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors"
      aria-label={`${title}の続きを読む`}
    >
      続きを読む
      <svg class="ml-1 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
      </svg>
    </a>
  </footer>
</article>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>